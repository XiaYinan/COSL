


ARM Macro Assembler    Page 1 


    1 00000000         ;-------------------------------------------------------
                       ------------------------
    2 00000000         ; dabort.asm
    3 00000000         ;
    4 00000000         ; Copyright (C) 2009-2014 Texas Instruments Incorporated
                        - http://www.ti.com/ 
    5 00000000         ; 
    6 00000000         ; 
    7 00000000         ;  Redistribution and use in source and binary forms, wi
                       th or without 
    8 00000000         ;  modification, are permitted provided that the followi
                       ng conditions 
    9 00000000         ;  are met:
   10 00000000         ;
   11 00000000         ;    Redistributions of source code must retain the abov
                       e copyright 
   12 00000000         ;    notice, this list of conditions and the following d
                       isclaimer.
   13 00000000         ;
   14 00000000         ;    Redistributions in binary form must reproduce the a
                       bove copyright
   15 00000000         ;    notice, this list of conditions and the following d
                       isclaimer in the 
   16 00000000         ;    documentation and/or other materials provided with 
                       the   
   17 00000000         ;    distribution.
   18 00000000         ;
   19 00000000         ;    Neither the name of Texas Instruments Incorporated 
                       nor the names of
   20 00000000         ;    its contributors may be used to endorse or promote 
                       products derived
   21 00000000         ;    from this software without specific prior written p
                       ermission.
   22 00000000         ;
   23 00000000         ;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AN
                       D CONTRIBUTORS 
   24 00000000         ;  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUD
                       ING, BUT NOT 
   25 00000000         ;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
                        AND FITNESS FOR
   26 00000000         ;  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHAL
                       L THE COPYRIGHT 
   27 00000000         ;  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIR
                       ECT, INCIDENTAL, 
   28 00000000         ;  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDI
                       NG, BUT NOT 
   29 00000000         ;  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVIC
                       ES; LOSS OF USE,
   30 00000000         ;  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER C
                       AUSED AND ON ANY
   31 00000000         ;  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIAB
                       ILITY, OR TORT 
   32 00000000         ;  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WA
                       Y OUT OF THE USE 
   33 00000000         ;  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
                       OF SUCH DAMAGE.
   34 00000000         ;
   35 00000000         ;
   36 00000000         ;



ARM Macro Assembler    Page 2 


   37 00000000         
   38 00000000                 area             |.text|, code, readonly
   39 00000000                 arm
   40 00000000         
   41 00000000         
   42 00000000         ;-------------------------------------------------------
                       ------------------------
   43 00000000         ; Run Memory Test
   44 00000000         
   45 00000000                 import           custom_dabort
   46 00000000                 export           _dabort
   47 00000000         
   48 00000000         
   49 00000000         _dabort
   50 00000000 E92D5FFF        stmfd            r13!, {r0 - r12, lr} ; push reg
                                                            isters and link reg
                                                            ister on to stack
   51 00000004         
   52 00000004 E59FC0C4        ldr              r12, esmsr3 ; ESM Group3 status
                                                             register
   53 00000008 E59C0000        ldr              r0,  [r12]
   54 0000000C E3100008        tst              r0,  #0x8   ; check if bit 3 is
                                                             set, this indicate
                                                            s uncorrectable ECC
                                                             error on B0TCM
   55 00000010 1A000006        bne              ramErrorFound
   56 00000014 E3100020        tst              r0, #0x20   ; check if bit 5 is
                                                             set, this indicate
                                                            s uncorrectable ECC
                                                             error on B1TCM
   57 00000018 1A000010        bne              ramErrorFound2
   58 0000001C         
   59 0000001C         noRAMerror
   60 0000001C E3100080        tst              r0, #0x80   ; check if bit 7 is
                                                             set, this indicate
                                                            s uncorrectable ECC
                                                             error on ATCM
   61 00000020 1A00001B        bne              flashErrorFound
   62 00000024         
   63 00000024 EBFFFFFE        bl               custom_dabort ; custom data abo
                                                            rt handler required
                                                            
   64 00000028         ; If this custom handler is written in assembly, all reg
                       isters used in the routine
   65 00000028         ; and the link register must be saved on to the stack up
                       on entry, and restored before
   66 00000028         ; return from the routine.
   67 00000028         
   68 00000028 E8BD5FFF        ldmfd            r13!, {r0 - r12, lr} ; pop regi
                                                            sters and link regi
                                                            ster from stack
   69 0000002C E25EF008        subs             pc, lr, #8  ; restore state of 
                                                            CPU when abort occu
                                                            rred, and branch ba
                                                            ck to instruction t
                                                            hat was aborted
   70 00000030         
   71 00000030         ramErrorFound
   72 00000030 E59F109C        ldr              r1, ramctrl ; RAM control regis



ARM Macro Assembler    Page 3 


                                                            ter for B0TCM TCRAM
                                                            W
   73 00000034 E5912000        ldr              r2, [r1]
   74 00000038 E3120C01        tst              r2, #0x100  ; check if bit 8 is
                                                             set in RAMCTRL, th
                                                            is indicates ECC me
                                                            mory write is enabl
                                                            ed
   75 0000003C 0A000013        beq              ramErrorReal
   76 00000040 E3A02020        mov              r2, #0x20
   77 00000044 E5812010        str              r2, [r1, #0x10] ; clear RAM err
                                                            or status register
   78 00000048         
   79 00000048 E3A02008        mov              r2, #0x08
   80 0000004C E58C2000        str              r2, [r12]   ; clear ESM group3 
                                                            channel3 flag for u
                                                            ncorrectable RAM EC
                                                            C errors
   81 00000050 E3A02005        mov              r2, #5
   82 00000054 E58C2018        str              r2, [r12, #0x18] ; The nERROR p
                                                            in will become inac
                                                            tive once the LTC c
                                                            ounter expires
   83 00000058         
   84 00000058 E8BD5FFF        ldmfd            r13!, {r0 - r12, lr}
   85 0000005C E25EF004        subs             pc, lr, #4  ; branch to instruc
                                                            tion after the one 
                                                            that caused the abo
                                                            rt
   86 00000060         ; this is the case because the data abort was caused int
                       entionally
   87 00000060         ; and we do not want to cause the same data abort again.
                       
   88 00000060         
   89 00000060         ramErrorFound2
   90 00000060 E59F1070        ldr              r1, ram2ctrl ; RAM control regi
                                                            ster for B1TCM TCRA
                                                            MW
   91 00000064 E5912000        ldr              r2, [r1]
   92 00000068 E3120C01        tst              r2, #0x100  ; check if bit 8 is
                                                             set in RAMCTRL, th
                                                            is indicates ECC me
                                                            mory write is enabl
                                                            ed
   93 0000006C 0A000007        beq              ramErrorReal
   94 00000070 E3A02020        mov              r2, #0x20
   95 00000074 E5812010        str              r2, [r1, #0x10] ; clear RAM err
                                                            or status register
   96 00000078         
   97 00000078 E3A02020        mov              r2, #0x20
   98 0000007C E58C2000        str              r2, [r12]   ; clear ESM group3 
                                                            flags channel5 flag
                                                             for uncorrectable 
                                                            RAM ECC errors
   99 00000080 E3A02005        mov              r2, #5
  100 00000084 E58C2018        str              r2, [r12, #0x18] ; The nERROR p
                                                            in will become inac
                                                            tive once the LTC c
                                                            ounter expires



ARM Macro Assembler    Page 4 


  101 00000088         
  102 00000088 E8BD5FFF        ldmfd            r13!, {r0 - r12, lr}
  103 0000008C E25EF004        subs             pc, lr, #4  ; branch to instruc
                                                            tion after the one 
                                                            that caused the abo
                                                            rt
  104 00000090         ; this is the case because the data abort was caused int
                       entionally
  105 00000090         ; and we do not want to cause the same data abort again.
                       
  106 00000090         
  107 00000090         
  108 00000090         ramErrorReal
  109 00000090 EAFFFFFE        b                ramErrorReal ; branch here fore
                                                            ver as continuing o
                                                            peration is not rec
                                                            ommended
  110 00000094         
  111 00000094         flashErrorFound
  112 00000094 E59F1048        ldr              r1, flashbase
  113 00000098 E591206C        ldr              r2, [r1, #0x6C] ; read FDIAGCTR
                                                            L register
  114 0000009C         
  115 0000009C E1A02822        mov              r2, r2, lsr #16
  116 000000A0 E3120005        tst              r2, #5      ; check if bits 19:
                                                            16 are 5, this indi
                                                            cates diagnostic mo
                                                            de is enabled
  117 000000A4 0A000008        beq              flashErrorReal
  118 000000A8 E3A02001        mov              r2, #1
  119 000000AC E1A02402        mov              r2, r2, lsl #8
  120 000000B0         
  121 000000B0 E581201C        str              r2, [r1, #0x1C] ; clear FEDACST
                                                            ATUS error flag
  122 000000B4         
  123 000000B4 E3A02080        mov              r2, #0x80
  124 000000B8 E58C2000        str              r2, [r12]   ; clear ESM group3 
                                                            flag for uncorrecta
                                                            ble flash ECC error
                                                            
  125 000000BC E3A02005        mov              r2, #5
  126 000000C0 E58C2018        str              r2, [r12, #0x18] ; The nERROR p
                                                            in will become inac
                                                            tive once the LTC c
                                                            ounter expires
  127 000000C4         
  128 000000C4 E8BD5FFF        ldmfd            r13!, {r0 - r12, lr}
  129 000000C8 E25EF004        subs             pc, lr, #4  ; branch to instruc
                                                            tion after the one 
                                                            that caused the abo
                                                            rt
  130 000000CC         ; this is the case because the data abort was caused int
                       entionally
  131 000000CC         ; and we do not want to cause the same data abort again.
                       
  132 000000CC         
  133 000000CC         
  134 000000CC         flashErrorReal
  135 000000CC EAFFFFFE        b                flashErrorReal ; branch here fo



ARM Macro Assembler    Page 5 


                                                            rever as continuing
                                                             operation is not r
                                                            ecommended
  136 000000D0         
  137 000000D0 FFFFF520 
                       esmsr3  dcd              0xFFFFF520
  138 000000D4 FFFFF800 
                       ramctrl dcd              0xFFFFF800
  139 000000D8 FFFFF900 
                       ram2ctrl
                               dcd              0xFFFFF900
  140 000000DC FFFFF810 
                       ram1errstat
                               dcd              0xFFFFF810
  141 000000E0 FFFFF910 
                       ram2errstat
                               dcd              0xFFFFF910
  142 000000E4 FFF87000 
                       flashbase
                               dcd              0xFFF87000
  143 000000E8         
  144 000000E8         
  145 000000E8         
  146 000000E8                 end
Command Line: --debug --xref --cpu=Cortex-R4F --bi --apcs=interwork --depend=.\
dabort.d -o.\dabort.o -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program File
s\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\TI" --list=.\dabort.
lst source\dabort.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file source\dabort.asm
   Uses
      None
Comment: .text unused
_dabort 00000000

Symbol: _dabort
   Definitions
      At line 49 in file source\dabort.asm
   Uses
      At line 46 in file source\dabort.asm
Comment: _dabort used once
esmsr3 000000D0

Symbol: esmsr3
   Definitions
      At line 137 in file source\dabort.asm
   Uses
      At line 52 in file source\dabort.asm
Comment: esmsr3 used once
flashErrorFound 00000094

Symbol: flashErrorFound
   Definitions
      At line 111 in file source\dabort.asm
   Uses
      At line 61 in file source\dabort.asm
Comment: flashErrorFound used once
flashErrorReal 000000CC

Symbol: flashErrorReal
   Definitions
      At line 134 in file source\dabort.asm
   Uses
      At line 117 in file source\dabort.asm
      At line 135 in file source\dabort.asm

flashbase 000000E4

Symbol: flashbase
   Definitions
      At line 142 in file source\dabort.asm
   Uses
      At line 112 in file source\dabort.asm
Comment: flashbase used once
noRAMerror 0000001C

Symbol: noRAMerror
   Definitions
      At line 59 in file source\dabort.asm
   Uses
      None
Comment: noRAMerror unused
ram1errstat 000000DC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: ram1errstat
   Definitions
      At line 140 in file source\dabort.asm
   Uses
      None
Comment: ram1errstat unused
ram2ctrl 000000D8

Symbol: ram2ctrl
   Definitions
      At line 139 in file source\dabort.asm
   Uses
      At line 90 in file source\dabort.asm
Comment: ram2ctrl used once
ram2errstat 000000E0

Symbol: ram2errstat
   Definitions
      At line 141 in file source\dabort.asm
   Uses
      None
Comment: ram2errstat unused
ramErrorFound 00000030

Symbol: ramErrorFound
   Definitions
      At line 71 in file source\dabort.asm
   Uses
      At line 55 in file source\dabort.asm
Comment: ramErrorFound used once
ramErrorFound2 00000060

Symbol: ramErrorFound2
   Definitions
      At line 89 in file source\dabort.asm
   Uses
      At line 57 in file source\dabort.asm
Comment: ramErrorFound2 used once
ramErrorReal 00000090

Symbol: ramErrorReal
   Definitions
      At line 108 in file source\dabort.asm
   Uses
      At line 75 in file source\dabort.asm
      At line 93 in file source\dabort.asm
      At line 109 in file source\dabort.asm

ramctrl 000000D4

Symbol: ramctrl
   Definitions
      At line 138 in file source\dabort.asm
   Uses
      At line 72 in file source\dabort.asm
Comment: ramctrl used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

custom_dabort 00000000

Symbol: custom_dabort
   Definitions
      At line 45 in file source\dabort.asm
   Uses
      At line 63 in file source\dabort.asm
Comment: custom_dabort used once
1 symbol
346 symbols in table
